@model selfies.Models.thread

<p>
    to: @Model.toHandle.name, from @Model.fromHandle.name
</p>

@if (Model.authorizeRequest == 1)
{

    if (Model.fromHandle.id == ViewBag.handle.id)
    {

        <p>
            this is the authorization request you sent to @Model.toHandle.name.
            you need to wait until they accept it, or you can <a class="contact_remover" id="r-@Model.groupKey" href="#">delete</a>
            it immediately.
        </p>   
        
    }
    else
    {

        <p>
            @Model.fromHandle.name sent you an authorization request. if you accept
            their request, they will be able to see your profile stream as well
            as send you direct messages. you can remove people from your contact
            list at any time.
        </p>   
    
        <ul>
            <li><a href="#" class="authorize" id="a-@Model.fromHandle.publicKey">accept</a></li>
            <li><a href="#" class="contact_remover" id="d-@Model.groupKey">deny</a></li>
        </ul>
        
    }
    
}
            
<a href="@Url.Content("~/api/snap/orig/" + Model.groupKey)"><img src="@Url.Content("~/api/snap/500/" + Model.groupKey)" alt="snap" /></a>

<p>
    chatty
</p>

<ul id="discussion">

    @foreach (selfies.Models.message m in ViewBag.chats)
    {
        <li>@m.handle.name said: @m.messageText</li>
    }
</ul>

<input type="text" id="chatMessage" />
<input type="button" id="sendChat" value="send" />
<input type="button" id="async" value="async" />


@section Scripts {
<script type="text/javascript">
    $(document).ready(function () {

        $("#sendChat").click(function () {

            var text = $("#chatMessage").val();

            var msg = {
                id: 1,
                fromHandleId: 1,
                sentDate: "",
                thread: { groupKey: "@Model.groupKey" },
                active: 1,
                anon: 0,
                toHandleSeen: 0,
                messageText: text,
                threadId: "@Model.id"
                };

            $.ajax({
                url: "@Url.Content("~/api/message")",
                data: msg,
                type: 'POST',
                success: function (result) {
                    window.location.reload();
                }
            });

        });

        $("a.authorize").click(function () {

            var currentId = $(this).attr('id');
            currentId = currentId.substring(2, currentId.length);

            console.log("authorize id: " + currentId);

            $.ajax({
                url: "@Url.Content("~/api/authorize")",
                data: { '': currentId },
                type: 'POST',
                success: function (result) {
                    // redirect to inbox... so dirty again
                    window.location = "@Url.Content("~/")";

                }
            });
            
        });

        $("a.contact_remover").click(function () {

            var currentId = $(this).attr('id');
            currentId = currentId.substring(2, currentId.length - 2);

            $.ajax({
                url: "@Url.Content("~/api/thread")",
                data: { '': currentId },
                type: 'DELETE',
                success: function (result) {
                    // redirect to inbox... so dirty again
                    window.location = "@Url.Content("~/")";

                }
            });

        });
    });
</script>

    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-1.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.--> 
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.  
            var chat = $.connection.authHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page. 
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };


            // Set initial focus to message input box.  
            $('#chatMessage').focus();

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#async').click(function () {
                    // Call the Send method on the hub. 
                    var handle = '@ViewBag.handle.name';
                    chat.server.send(handle, $('#chatMessage').val());
                    // Clear text box and reset focus for next comment. 
                    $('#chatMessage').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}