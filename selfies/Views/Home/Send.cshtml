<p>
    <span class="error"></span>
</p>

<p>
    to: <select data-bind="options: toContacts,
    optionsText: 'name',
    optionsValue: 'guid',
    value: $root.toGuid"></select> <br />

<form enctype="multipart/form-data">
    <input name="file" type="file" data-bind="event: { change: sendSnap }" />
    <input type="hidden" name="groupKey" id="groupKey" />
</form>
<progress></progress>
        
</p>


<p>
    <span id="thread_result"></span>
</p>

@section Scripts {
<script type="text/javascript">

    function SnapViewModel() {
        var self = this;

        self.contacts = ko.observableArray([]);

        self.toContacts = ko.observableArray([]);
        self.toGuid = ko.observable("");
        self.toGroupKey = ko.observable("");

        self.loadContacts = function () {
            self.doneLoading = false;
            self.contacts.removeAll();
            self.toContacts.removeAll();

            self.toContacts.push({ name: "everyone", guid: "1" });

            $.get("@Url.Content("~/api/follower")", function (data, status) {

                if (data.length > 0) {
                    $.each(data, function (i, item) {
                        console.log(item);
                        self.contacts.push(item);

                        self.toContacts.push({ name: item.followeeHandle.name, guid: item.followeeHandle.publicKey });
                    });
                } else {
                    self.contacts = ko.observableArray([]);
                    //alert('oh');
                }

            });


        }

        // initial load on init...
        self.loadContacts();


        self.sendSnap = function () {

            $("#send").fadeOut('fast');
            var to_handle = self.toGuid();

            // guid code from http://stackoverflow.com/a/2117523/146516
            var group_key = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });

            self.toGroupKey = group_key;

            if (to_handle.length == 0) {
                $("span.error").html("please type a handle.").fadeIn();
                $("#send").fadeIn('fast');
                return;
            }
            var thread = { toGuid: to_handle, groupKey: group_key };

            // Send the data using post
            var posting = $.post("@Url.Content("/api/thread")", thread);

            // Put the results in a div
            posting.done(function (data) {

                // if active=1, then they have successfully registered a handle and logged in
                // if active=-1, then the username was taken
                // if active=-1, then there was an error
                console.log(data);

                switch (data.result) {
                    case 0:
                        $("#send").fadeIn('fast');
                        $("span.error").html("there was an error starting the thread.").fadeIn();
                        break;
                    case 1:
                        // now upload the image
                        var drop = $(':file')[0];
                        var file = drop.files[0];
                        var name = file.name;
                        var size = file.size;
                        var type = file.type;
                        //Your validation
                        console.log(file);

                        // just upload the file
                        var formData = new FormData($('form')[0]);

                        //console.log(formData);

                        $.ajax({
                            url: '@Url.Content("~/api/upload/postfile")?key=' + group_key,  //Server script to process data
                            type: 'POST',
                            xhr: function () {  // Custom XMLHttpRequest
                                var myXhr = $.ajaxSettings.xhr();
                                if (myXhr.upload) { // Check if upload property exists
                                    myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // For handling the progress of the upload
                                }
                                return myXhr;
                            },
                            //Ajax events
                            //beforeSend: beforeSendHandler,
                            success: function (data) {

                                // redirect to details page... so dirty again

                                window.location = "@Url.Content("~/" + ViewBag.handle.name + "/")" + group_key;

                            },
                            error: function (err) {
                                alert("error :(");
                                console.log(err);
                            },
                            // Form data
                            data: formData,
                            //Options to tell jQuery not to process data or worry about content-type.
                            cache: false,
                            contentType: false,
                            processData: false
                        });

                    }

                });

            posting.error(function () {
                $("#send").fadeIn('fast');
                $("span.error").html("there was an error starting the thread.").fadeIn();
            });

        }

    }

    function progressHandlingFunction(e) {
        if (e.lengthComputable) {
            $('progress').attr({ value: e.loaded, max: e.total });
        }
    }

    function display_errors(err) {
        $("#add_results").html(err).fadeIn();
    }

    ko.applyBindings(new SnapViewModel());
</script>


}
